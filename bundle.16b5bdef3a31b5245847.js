(()=>{"use strict";class t{constructor(t){this.id=Date.now(),this.text=t,this.completed=!1}}class e{constructor(){this.tasks=JSON.parse(localStorage.getItem("tasks"))||[],this.filter="all",this.taskForm=document.getElementById("task-form"),this.taskInput=document.getElementById("task-input"),this.taskList=document.getElementById("task-list"),this.taskCount=document.getElementById("task-count"),this.clearCompletedBtn=document.getElementById("clear-completed"),this.filtersContainer=document.querySelector(".filters"),this.init()}init(){this.taskForm.addEventListener("submit",this.addTask.bind(this)),this.taskList.addEventListener("click",this.handleTaskClick.bind(this)),this.clearCompletedBtn.addEventListener("click",this.clearCompleted.bind(this)),this.filtersContainer.addEventListener("click",this.handleFilterClick.bind(this)),this.render()}save(){localStorage.setItem("tasks",JSON.stringify(this.tasks))}addTask(e){e.preventDefault();const s=this.taskInput.value.trim();s&&(this.tasks.push(new t(s)),this.taskInput.value="",this.save(),this.render())}toggleTask(t){this.tasks=this.tasks.map(e=>e.id===t?{...e,completed:!e.completed}:e),this.save(),this.render()}deleteTask(t){this.tasks=this.tasks.filter(e=>e.id!==t),this.save(),this.render()}clearCompleted(){this.tasks=this.tasks.filter(t=>!t.completed),this.save(),this.render()}handleTaskClick(t){const e=t.target,s=parseInt(e.closest(".task-item").dataset.id,10);e.classList.contains("toggle")?this.toggleTask(s):e.classList.contains("destroy")&&this.deleteTask(s)}setFilter(t){this.filter=t,this.render()}handleFilterClick(t){const e=t.target;e.matches(".filter-btn")&&this.setFilter(e.dataset.filter)}getFilteredTasks(){switch(this.filter){case"active":return this.tasks.filter(t=>!t.completed);case"completed":return this.tasks.filter(t=>t.completed);default:return this.tasks}}render(){const t=this.getFilteredTasks();this.taskList.innerHTML=t.map(t=>this.createTaskElement(t)).join(""),this.updateTaskCount(),this.updateFilters(),this.toggleClearCompletedButton()}createTaskElement(t){return`\n            <li class="task-item ${t.completed?"completed":""}" data-id="${t.id}">\n                <div class="view">\n                    <input class="toggle" type="checkbox" ${t.completed?"checked":""}>\n                    <label class="task-text">${t.text}</label>\n                    <button class="destroy"></button>\n                </div>\n            </li>\n        `}updateTaskCount(){const t=this.tasks.filter(t=>!t.completed).length,e=1!==t?"s":"";this.taskCount.textContent=`${t} tarefa${e} restante${e}`}updateFilters(){document.querySelectorAll(".filter-btn").forEach(t=>{t.classList.toggle("active",t.dataset.filter===this.filter)})}toggleClearCompletedButton(){const t=this.tasks.some(t=>t.completed);this.clearCompletedBtn.style.display=t?"block":"none"}}document.addEventListener("DOMContentLoaded",()=>{new e})})();